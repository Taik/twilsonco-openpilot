#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.11.1                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7930137500395005439) {
   out_7930137500395005439[0] = 0;
   out_7930137500395005439[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7930137500395005439[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7930137500395005439[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7930137500395005439[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7930137500395005439[5] = -sin(in_vec[1]);
   out_7930137500395005439[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7930137500395005439[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7930137500395005439[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7930137500395005439[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7930137500395005439[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7930137500395005439[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7930137500395005439[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7930137500395005439[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7930137500395005439[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7930137500395005439[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7930137500395005439[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7930137500395005439[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_1511445506936860753) {
   out_1511445506936860753[0] = delta_x[0] + nom_x[0];
   out_1511445506936860753[1] = delta_x[1] + nom_x[1];
   out_1511445506936860753[2] = delta_x[2] + nom_x[2];
   out_1511445506936860753[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_1511445506936860753[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_1511445506936860753[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_1511445506936860753[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_1511445506936860753[7] = delta_x[6] + nom_x[7];
   out_1511445506936860753[8] = delta_x[7] + nom_x[8];
   out_1511445506936860753[9] = delta_x[8] + nom_x[9];
   out_1511445506936860753[10] = delta_x[9] + nom_x[10];
   out_1511445506936860753[11] = delta_x[10] + nom_x[11];
   out_1511445506936860753[12] = delta_x[11] + nom_x[12];
   out_1511445506936860753[13] = delta_x[12] + nom_x[13];
   out_1511445506936860753[14] = delta_x[13] + nom_x[14];
   out_1511445506936860753[15] = delta_x[14] + nom_x[15];
   out_1511445506936860753[16] = delta_x[15] + nom_x[16];
   out_1511445506936860753[17] = delta_x[16] + nom_x[17];
   out_1511445506936860753[18] = delta_x[17] + nom_x[18];
   out_1511445506936860753[19] = delta_x[18] + nom_x[19];
   out_1511445506936860753[20] = delta_x[19] + nom_x[20];
   out_1511445506936860753[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4492291371470343697) {
   out_4492291371470343697[0] = -nom_x[0] + true_x[0];
   out_4492291371470343697[1] = -nom_x[1] + true_x[1];
   out_4492291371470343697[2] = -nom_x[2] + true_x[2];
   out_4492291371470343697[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4492291371470343697[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4492291371470343697[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4492291371470343697[6] = -nom_x[7] + true_x[7];
   out_4492291371470343697[7] = -nom_x[8] + true_x[8];
   out_4492291371470343697[8] = -nom_x[9] + true_x[9];
   out_4492291371470343697[9] = -nom_x[10] + true_x[10];
   out_4492291371470343697[10] = -nom_x[11] + true_x[11];
   out_4492291371470343697[11] = -nom_x[12] + true_x[12];
   out_4492291371470343697[12] = -nom_x[13] + true_x[13];
   out_4492291371470343697[13] = -nom_x[14] + true_x[14];
   out_4492291371470343697[14] = -nom_x[15] + true_x[15];
   out_4492291371470343697[15] = -nom_x[16] + true_x[16];
   out_4492291371470343697[16] = -nom_x[17] + true_x[17];
   out_4492291371470343697[17] = -nom_x[18] + true_x[18];
   out_4492291371470343697[18] = -nom_x[19] + true_x[19];
   out_4492291371470343697[19] = -nom_x[20] + true_x[20];
   out_4492291371470343697[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6277349731035049140) {
   out_6277349731035049140[0] = 1.0;
   out_6277349731035049140[1] = 0;
   out_6277349731035049140[2] = 0;
   out_6277349731035049140[3] = 0;
   out_6277349731035049140[4] = 0;
   out_6277349731035049140[5] = 0;
   out_6277349731035049140[6] = 0;
   out_6277349731035049140[7] = 0;
   out_6277349731035049140[8] = 0;
   out_6277349731035049140[9] = 0;
   out_6277349731035049140[10] = 0;
   out_6277349731035049140[11] = 0;
   out_6277349731035049140[12] = 0;
   out_6277349731035049140[13] = 0;
   out_6277349731035049140[14] = 0;
   out_6277349731035049140[15] = 0;
   out_6277349731035049140[16] = 0;
   out_6277349731035049140[17] = 0;
   out_6277349731035049140[18] = 0;
   out_6277349731035049140[19] = 0;
   out_6277349731035049140[20] = 0;
   out_6277349731035049140[21] = 0;
   out_6277349731035049140[22] = 1.0;
   out_6277349731035049140[23] = 0;
   out_6277349731035049140[24] = 0;
   out_6277349731035049140[25] = 0;
   out_6277349731035049140[26] = 0;
   out_6277349731035049140[27] = 0;
   out_6277349731035049140[28] = 0;
   out_6277349731035049140[29] = 0;
   out_6277349731035049140[30] = 0;
   out_6277349731035049140[31] = 0;
   out_6277349731035049140[32] = 0;
   out_6277349731035049140[33] = 0;
   out_6277349731035049140[34] = 0;
   out_6277349731035049140[35] = 0;
   out_6277349731035049140[36] = 0;
   out_6277349731035049140[37] = 0;
   out_6277349731035049140[38] = 0;
   out_6277349731035049140[39] = 0;
   out_6277349731035049140[40] = 0;
   out_6277349731035049140[41] = 0;
   out_6277349731035049140[42] = 0;
   out_6277349731035049140[43] = 0;
   out_6277349731035049140[44] = 1.0;
   out_6277349731035049140[45] = 0;
   out_6277349731035049140[46] = 0;
   out_6277349731035049140[47] = 0;
   out_6277349731035049140[48] = 0;
   out_6277349731035049140[49] = 0;
   out_6277349731035049140[50] = 0;
   out_6277349731035049140[51] = 0;
   out_6277349731035049140[52] = 0;
   out_6277349731035049140[53] = 0;
   out_6277349731035049140[54] = 0;
   out_6277349731035049140[55] = 0;
   out_6277349731035049140[56] = 0;
   out_6277349731035049140[57] = 0;
   out_6277349731035049140[58] = 0;
   out_6277349731035049140[59] = 0;
   out_6277349731035049140[60] = 0;
   out_6277349731035049140[61] = 0;
   out_6277349731035049140[62] = 0;
   out_6277349731035049140[63] = 0;
   out_6277349731035049140[64] = 0;
   out_6277349731035049140[65] = 0;
   out_6277349731035049140[66] = -0.5*state[4];
   out_6277349731035049140[67] = -0.5*state[5];
   out_6277349731035049140[68] = -0.5*state[6];
   out_6277349731035049140[69] = 0;
   out_6277349731035049140[70] = 0;
   out_6277349731035049140[71] = 0;
   out_6277349731035049140[72] = 0;
   out_6277349731035049140[73] = 0;
   out_6277349731035049140[74] = 0;
   out_6277349731035049140[75] = 0;
   out_6277349731035049140[76] = 0;
   out_6277349731035049140[77] = 0;
   out_6277349731035049140[78] = 0;
   out_6277349731035049140[79] = 0;
   out_6277349731035049140[80] = 0;
   out_6277349731035049140[81] = 0;
   out_6277349731035049140[82] = 0;
   out_6277349731035049140[83] = 0;
   out_6277349731035049140[84] = 0;
   out_6277349731035049140[85] = 0;
   out_6277349731035049140[86] = 0;
   out_6277349731035049140[87] = 0.5*state[3];
   out_6277349731035049140[88] = 0.5*state[6];
   out_6277349731035049140[89] = -0.5*state[5];
   out_6277349731035049140[90] = 0;
   out_6277349731035049140[91] = 0;
   out_6277349731035049140[92] = 0;
   out_6277349731035049140[93] = 0;
   out_6277349731035049140[94] = 0;
   out_6277349731035049140[95] = 0;
   out_6277349731035049140[96] = 0;
   out_6277349731035049140[97] = 0;
   out_6277349731035049140[98] = 0;
   out_6277349731035049140[99] = 0;
   out_6277349731035049140[100] = 0;
   out_6277349731035049140[101] = 0;
   out_6277349731035049140[102] = 0;
   out_6277349731035049140[103] = 0;
   out_6277349731035049140[104] = 0;
   out_6277349731035049140[105] = 0;
   out_6277349731035049140[106] = 0;
   out_6277349731035049140[107] = 0;
   out_6277349731035049140[108] = -0.5*state[6];
   out_6277349731035049140[109] = 0.5*state[3];
   out_6277349731035049140[110] = 0.5*state[4];
   out_6277349731035049140[111] = 0;
   out_6277349731035049140[112] = 0;
   out_6277349731035049140[113] = 0;
   out_6277349731035049140[114] = 0;
   out_6277349731035049140[115] = 0;
   out_6277349731035049140[116] = 0;
   out_6277349731035049140[117] = 0;
   out_6277349731035049140[118] = 0;
   out_6277349731035049140[119] = 0;
   out_6277349731035049140[120] = 0;
   out_6277349731035049140[121] = 0;
   out_6277349731035049140[122] = 0;
   out_6277349731035049140[123] = 0;
   out_6277349731035049140[124] = 0;
   out_6277349731035049140[125] = 0;
   out_6277349731035049140[126] = 0;
   out_6277349731035049140[127] = 0;
   out_6277349731035049140[128] = 0;
   out_6277349731035049140[129] = 0.5*state[5];
   out_6277349731035049140[130] = -0.5*state[4];
   out_6277349731035049140[131] = 0.5*state[3];
   out_6277349731035049140[132] = 0;
   out_6277349731035049140[133] = 0;
   out_6277349731035049140[134] = 0;
   out_6277349731035049140[135] = 0;
   out_6277349731035049140[136] = 0;
   out_6277349731035049140[137] = 0;
   out_6277349731035049140[138] = 0;
   out_6277349731035049140[139] = 0;
   out_6277349731035049140[140] = 0;
   out_6277349731035049140[141] = 0;
   out_6277349731035049140[142] = 0;
   out_6277349731035049140[143] = 0;
   out_6277349731035049140[144] = 0;
   out_6277349731035049140[145] = 0;
   out_6277349731035049140[146] = 0;
   out_6277349731035049140[147] = 0;
   out_6277349731035049140[148] = 0;
   out_6277349731035049140[149] = 0;
   out_6277349731035049140[150] = 0;
   out_6277349731035049140[151] = 0;
   out_6277349731035049140[152] = 0;
   out_6277349731035049140[153] = 1.0;
   out_6277349731035049140[154] = 0;
   out_6277349731035049140[155] = 0;
   out_6277349731035049140[156] = 0;
   out_6277349731035049140[157] = 0;
   out_6277349731035049140[158] = 0;
   out_6277349731035049140[159] = 0;
   out_6277349731035049140[160] = 0;
   out_6277349731035049140[161] = 0;
   out_6277349731035049140[162] = 0;
   out_6277349731035049140[163] = 0;
   out_6277349731035049140[164] = 0;
   out_6277349731035049140[165] = 0;
   out_6277349731035049140[166] = 0;
   out_6277349731035049140[167] = 0;
   out_6277349731035049140[168] = 0;
   out_6277349731035049140[169] = 0;
   out_6277349731035049140[170] = 0;
   out_6277349731035049140[171] = 0;
   out_6277349731035049140[172] = 0;
   out_6277349731035049140[173] = 0;
   out_6277349731035049140[174] = 0;
   out_6277349731035049140[175] = 1.0;
   out_6277349731035049140[176] = 0;
   out_6277349731035049140[177] = 0;
   out_6277349731035049140[178] = 0;
   out_6277349731035049140[179] = 0;
   out_6277349731035049140[180] = 0;
   out_6277349731035049140[181] = 0;
   out_6277349731035049140[182] = 0;
   out_6277349731035049140[183] = 0;
   out_6277349731035049140[184] = 0;
   out_6277349731035049140[185] = 0;
   out_6277349731035049140[186] = 0;
   out_6277349731035049140[187] = 0;
   out_6277349731035049140[188] = 0;
   out_6277349731035049140[189] = 0;
   out_6277349731035049140[190] = 0;
   out_6277349731035049140[191] = 0;
   out_6277349731035049140[192] = 0;
   out_6277349731035049140[193] = 0;
   out_6277349731035049140[194] = 0;
   out_6277349731035049140[195] = 0;
   out_6277349731035049140[196] = 0;
   out_6277349731035049140[197] = 1.0;
   out_6277349731035049140[198] = 0;
   out_6277349731035049140[199] = 0;
   out_6277349731035049140[200] = 0;
   out_6277349731035049140[201] = 0;
   out_6277349731035049140[202] = 0;
   out_6277349731035049140[203] = 0;
   out_6277349731035049140[204] = 0;
   out_6277349731035049140[205] = 0;
   out_6277349731035049140[206] = 0;
   out_6277349731035049140[207] = 0;
   out_6277349731035049140[208] = 0;
   out_6277349731035049140[209] = 0;
   out_6277349731035049140[210] = 0;
   out_6277349731035049140[211] = 0;
   out_6277349731035049140[212] = 0;
   out_6277349731035049140[213] = 0;
   out_6277349731035049140[214] = 0;
   out_6277349731035049140[215] = 0;
   out_6277349731035049140[216] = 0;
   out_6277349731035049140[217] = 0;
   out_6277349731035049140[218] = 0;
   out_6277349731035049140[219] = 1.0;
   out_6277349731035049140[220] = 0;
   out_6277349731035049140[221] = 0;
   out_6277349731035049140[222] = 0;
   out_6277349731035049140[223] = 0;
   out_6277349731035049140[224] = 0;
   out_6277349731035049140[225] = 0;
   out_6277349731035049140[226] = 0;
   out_6277349731035049140[227] = 0;
   out_6277349731035049140[228] = 0;
   out_6277349731035049140[229] = 0;
   out_6277349731035049140[230] = 0;
   out_6277349731035049140[231] = 0;
   out_6277349731035049140[232] = 0;
   out_6277349731035049140[233] = 0;
   out_6277349731035049140[234] = 0;
   out_6277349731035049140[235] = 0;
   out_6277349731035049140[236] = 0;
   out_6277349731035049140[237] = 0;
   out_6277349731035049140[238] = 0;
   out_6277349731035049140[239] = 0;
   out_6277349731035049140[240] = 0;
   out_6277349731035049140[241] = 1.0;
   out_6277349731035049140[242] = 0;
   out_6277349731035049140[243] = 0;
   out_6277349731035049140[244] = 0;
   out_6277349731035049140[245] = 0;
   out_6277349731035049140[246] = 0;
   out_6277349731035049140[247] = 0;
   out_6277349731035049140[248] = 0;
   out_6277349731035049140[249] = 0;
   out_6277349731035049140[250] = 0;
   out_6277349731035049140[251] = 0;
   out_6277349731035049140[252] = 0;
   out_6277349731035049140[253] = 0;
   out_6277349731035049140[254] = 0;
   out_6277349731035049140[255] = 0;
   out_6277349731035049140[256] = 0;
   out_6277349731035049140[257] = 0;
   out_6277349731035049140[258] = 0;
   out_6277349731035049140[259] = 0;
   out_6277349731035049140[260] = 0;
   out_6277349731035049140[261] = 0;
   out_6277349731035049140[262] = 0;
   out_6277349731035049140[263] = 1.0;
   out_6277349731035049140[264] = 0;
   out_6277349731035049140[265] = 0;
   out_6277349731035049140[266] = 0;
   out_6277349731035049140[267] = 0;
   out_6277349731035049140[268] = 0;
   out_6277349731035049140[269] = 0;
   out_6277349731035049140[270] = 0;
   out_6277349731035049140[271] = 0;
   out_6277349731035049140[272] = 0;
   out_6277349731035049140[273] = 0;
   out_6277349731035049140[274] = 0;
   out_6277349731035049140[275] = 0;
   out_6277349731035049140[276] = 0;
   out_6277349731035049140[277] = 0;
   out_6277349731035049140[278] = 0;
   out_6277349731035049140[279] = 0;
   out_6277349731035049140[280] = 0;
   out_6277349731035049140[281] = 0;
   out_6277349731035049140[282] = 0;
   out_6277349731035049140[283] = 0;
   out_6277349731035049140[284] = 0;
   out_6277349731035049140[285] = 1.0;
   out_6277349731035049140[286] = 0;
   out_6277349731035049140[287] = 0;
   out_6277349731035049140[288] = 0;
   out_6277349731035049140[289] = 0;
   out_6277349731035049140[290] = 0;
   out_6277349731035049140[291] = 0;
   out_6277349731035049140[292] = 0;
   out_6277349731035049140[293] = 0;
   out_6277349731035049140[294] = 0;
   out_6277349731035049140[295] = 0;
   out_6277349731035049140[296] = 0;
   out_6277349731035049140[297] = 0;
   out_6277349731035049140[298] = 0;
   out_6277349731035049140[299] = 0;
   out_6277349731035049140[300] = 0;
   out_6277349731035049140[301] = 0;
   out_6277349731035049140[302] = 0;
   out_6277349731035049140[303] = 0;
   out_6277349731035049140[304] = 0;
   out_6277349731035049140[305] = 0;
   out_6277349731035049140[306] = 0;
   out_6277349731035049140[307] = 1.0;
   out_6277349731035049140[308] = 0;
   out_6277349731035049140[309] = 0;
   out_6277349731035049140[310] = 0;
   out_6277349731035049140[311] = 0;
   out_6277349731035049140[312] = 0;
   out_6277349731035049140[313] = 0;
   out_6277349731035049140[314] = 0;
   out_6277349731035049140[315] = 0;
   out_6277349731035049140[316] = 0;
   out_6277349731035049140[317] = 0;
   out_6277349731035049140[318] = 0;
   out_6277349731035049140[319] = 0;
   out_6277349731035049140[320] = 0;
   out_6277349731035049140[321] = 0;
   out_6277349731035049140[322] = 0;
   out_6277349731035049140[323] = 0;
   out_6277349731035049140[324] = 0;
   out_6277349731035049140[325] = 0;
   out_6277349731035049140[326] = 0;
   out_6277349731035049140[327] = 0;
   out_6277349731035049140[328] = 0;
   out_6277349731035049140[329] = 1.0;
   out_6277349731035049140[330] = 0;
   out_6277349731035049140[331] = 0;
   out_6277349731035049140[332] = 0;
   out_6277349731035049140[333] = 0;
   out_6277349731035049140[334] = 0;
   out_6277349731035049140[335] = 0;
   out_6277349731035049140[336] = 0;
   out_6277349731035049140[337] = 0;
   out_6277349731035049140[338] = 0;
   out_6277349731035049140[339] = 0;
   out_6277349731035049140[340] = 0;
   out_6277349731035049140[341] = 0;
   out_6277349731035049140[342] = 0;
   out_6277349731035049140[343] = 0;
   out_6277349731035049140[344] = 0;
   out_6277349731035049140[345] = 0;
   out_6277349731035049140[346] = 0;
   out_6277349731035049140[347] = 0;
   out_6277349731035049140[348] = 0;
   out_6277349731035049140[349] = 0;
   out_6277349731035049140[350] = 0;
   out_6277349731035049140[351] = 1.0;
   out_6277349731035049140[352] = 0;
   out_6277349731035049140[353] = 0;
   out_6277349731035049140[354] = 0;
   out_6277349731035049140[355] = 0;
   out_6277349731035049140[356] = 0;
   out_6277349731035049140[357] = 0;
   out_6277349731035049140[358] = 0;
   out_6277349731035049140[359] = 0;
   out_6277349731035049140[360] = 0;
   out_6277349731035049140[361] = 0;
   out_6277349731035049140[362] = 0;
   out_6277349731035049140[363] = 0;
   out_6277349731035049140[364] = 0;
   out_6277349731035049140[365] = 0;
   out_6277349731035049140[366] = 0;
   out_6277349731035049140[367] = 0;
   out_6277349731035049140[368] = 0;
   out_6277349731035049140[369] = 0;
   out_6277349731035049140[370] = 0;
   out_6277349731035049140[371] = 0;
   out_6277349731035049140[372] = 0;
   out_6277349731035049140[373] = 1.0;
   out_6277349731035049140[374] = 0;
   out_6277349731035049140[375] = 0;
   out_6277349731035049140[376] = 0;
   out_6277349731035049140[377] = 0;
   out_6277349731035049140[378] = 0;
   out_6277349731035049140[379] = 0;
   out_6277349731035049140[380] = 0;
   out_6277349731035049140[381] = 0;
   out_6277349731035049140[382] = 0;
   out_6277349731035049140[383] = 0;
   out_6277349731035049140[384] = 0;
   out_6277349731035049140[385] = 0;
   out_6277349731035049140[386] = 0;
   out_6277349731035049140[387] = 0;
   out_6277349731035049140[388] = 0;
   out_6277349731035049140[389] = 0;
   out_6277349731035049140[390] = 0;
   out_6277349731035049140[391] = 0;
   out_6277349731035049140[392] = 0;
   out_6277349731035049140[393] = 0;
   out_6277349731035049140[394] = 0;
   out_6277349731035049140[395] = 1.0;
   out_6277349731035049140[396] = 0;
   out_6277349731035049140[397] = 0;
   out_6277349731035049140[398] = 0;
   out_6277349731035049140[399] = 0;
   out_6277349731035049140[400] = 0;
   out_6277349731035049140[401] = 0;
   out_6277349731035049140[402] = 0;
   out_6277349731035049140[403] = 0;
   out_6277349731035049140[404] = 0;
   out_6277349731035049140[405] = 0;
   out_6277349731035049140[406] = 0;
   out_6277349731035049140[407] = 0;
   out_6277349731035049140[408] = 0;
   out_6277349731035049140[409] = 0;
   out_6277349731035049140[410] = 0;
   out_6277349731035049140[411] = 0;
   out_6277349731035049140[412] = 0;
   out_6277349731035049140[413] = 0;
   out_6277349731035049140[414] = 0;
   out_6277349731035049140[415] = 0;
   out_6277349731035049140[416] = 0;
   out_6277349731035049140[417] = 1.0;
   out_6277349731035049140[418] = 0;
   out_6277349731035049140[419] = 0;
   out_6277349731035049140[420] = 0;
   out_6277349731035049140[421] = 0;
   out_6277349731035049140[422] = 0;
   out_6277349731035049140[423] = 0;
   out_6277349731035049140[424] = 0;
   out_6277349731035049140[425] = 0;
   out_6277349731035049140[426] = 0;
   out_6277349731035049140[427] = 0;
   out_6277349731035049140[428] = 0;
   out_6277349731035049140[429] = 0;
   out_6277349731035049140[430] = 0;
   out_6277349731035049140[431] = 0;
   out_6277349731035049140[432] = 0;
   out_6277349731035049140[433] = 0;
   out_6277349731035049140[434] = 0;
   out_6277349731035049140[435] = 0;
   out_6277349731035049140[436] = 0;
   out_6277349731035049140[437] = 0;
   out_6277349731035049140[438] = 0;
   out_6277349731035049140[439] = 1.0;
   out_6277349731035049140[440] = 0;
   out_6277349731035049140[441] = 0;
   out_6277349731035049140[442] = 0;
   out_6277349731035049140[443] = 0;
   out_6277349731035049140[444] = 0;
   out_6277349731035049140[445] = 0;
   out_6277349731035049140[446] = 0;
   out_6277349731035049140[447] = 0;
   out_6277349731035049140[448] = 0;
   out_6277349731035049140[449] = 0;
   out_6277349731035049140[450] = 0;
   out_6277349731035049140[451] = 0;
   out_6277349731035049140[452] = 0;
   out_6277349731035049140[453] = 0;
   out_6277349731035049140[454] = 0;
   out_6277349731035049140[455] = 0;
   out_6277349731035049140[456] = 0;
   out_6277349731035049140[457] = 0;
   out_6277349731035049140[458] = 0;
   out_6277349731035049140[459] = 0;
   out_6277349731035049140[460] = 0;
   out_6277349731035049140[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_2633777933531838554) {
   out_2633777933531838554[0] = dt*state[7] + state[0];
   out_2633777933531838554[1] = dt*state[8] + state[1];
   out_2633777933531838554[2] = dt*state[9] + state[2];
   out_2633777933531838554[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_2633777933531838554[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_2633777933531838554[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_2633777933531838554[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_2633777933531838554[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_2633777933531838554[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_2633777933531838554[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_2633777933531838554[10] = state[10];
   out_2633777933531838554[11] = state[11];
   out_2633777933531838554[12] = state[12];
   out_2633777933531838554[13] = state[13];
   out_2633777933531838554[14] = state[14];
   out_2633777933531838554[15] = state[15];
   out_2633777933531838554[16] = state[16];
   out_2633777933531838554[17] = state[17];
   out_2633777933531838554[18] = state[18];
   out_2633777933531838554[19] = state[19];
   out_2633777933531838554[20] = state[20];
   out_2633777933531838554[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5635087947563813180) {
   out_5635087947563813180[0] = 1;
   out_5635087947563813180[1] = 0;
   out_5635087947563813180[2] = 0;
   out_5635087947563813180[3] = 0;
   out_5635087947563813180[4] = 0;
   out_5635087947563813180[5] = 0;
   out_5635087947563813180[6] = dt;
   out_5635087947563813180[7] = 0;
   out_5635087947563813180[8] = 0;
   out_5635087947563813180[9] = 0;
   out_5635087947563813180[10] = 0;
   out_5635087947563813180[11] = 0;
   out_5635087947563813180[12] = 0;
   out_5635087947563813180[13] = 0;
   out_5635087947563813180[14] = 0;
   out_5635087947563813180[15] = 0;
   out_5635087947563813180[16] = 0;
   out_5635087947563813180[17] = 0;
   out_5635087947563813180[18] = 0;
   out_5635087947563813180[19] = 0;
   out_5635087947563813180[20] = 0;
   out_5635087947563813180[21] = 0;
   out_5635087947563813180[22] = 1;
   out_5635087947563813180[23] = 0;
   out_5635087947563813180[24] = 0;
   out_5635087947563813180[25] = 0;
   out_5635087947563813180[26] = 0;
   out_5635087947563813180[27] = 0;
   out_5635087947563813180[28] = dt;
   out_5635087947563813180[29] = 0;
   out_5635087947563813180[30] = 0;
   out_5635087947563813180[31] = 0;
   out_5635087947563813180[32] = 0;
   out_5635087947563813180[33] = 0;
   out_5635087947563813180[34] = 0;
   out_5635087947563813180[35] = 0;
   out_5635087947563813180[36] = 0;
   out_5635087947563813180[37] = 0;
   out_5635087947563813180[38] = 0;
   out_5635087947563813180[39] = 0;
   out_5635087947563813180[40] = 0;
   out_5635087947563813180[41] = 0;
   out_5635087947563813180[42] = 0;
   out_5635087947563813180[43] = 0;
   out_5635087947563813180[44] = 1;
   out_5635087947563813180[45] = 0;
   out_5635087947563813180[46] = 0;
   out_5635087947563813180[47] = 0;
   out_5635087947563813180[48] = 0;
   out_5635087947563813180[49] = 0;
   out_5635087947563813180[50] = dt;
   out_5635087947563813180[51] = 0;
   out_5635087947563813180[52] = 0;
   out_5635087947563813180[53] = 0;
   out_5635087947563813180[54] = 0;
   out_5635087947563813180[55] = 0;
   out_5635087947563813180[56] = 0;
   out_5635087947563813180[57] = 0;
   out_5635087947563813180[58] = 0;
   out_5635087947563813180[59] = 0;
   out_5635087947563813180[60] = 0;
   out_5635087947563813180[61] = 0;
   out_5635087947563813180[62] = 0;
   out_5635087947563813180[63] = 0;
   out_5635087947563813180[64] = 0;
   out_5635087947563813180[65] = 0;
   out_5635087947563813180[66] = 1;
   out_5635087947563813180[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5635087947563813180[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5635087947563813180[69] = 0;
   out_5635087947563813180[70] = 0;
   out_5635087947563813180[71] = 0;
   out_5635087947563813180[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5635087947563813180[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5635087947563813180[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5635087947563813180[75] = 0;
   out_5635087947563813180[76] = 0;
   out_5635087947563813180[77] = 0;
   out_5635087947563813180[78] = 0;
   out_5635087947563813180[79] = 0;
   out_5635087947563813180[80] = 0;
   out_5635087947563813180[81] = 0;
   out_5635087947563813180[82] = 0;
   out_5635087947563813180[83] = 0;
   out_5635087947563813180[84] = 0;
   out_5635087947563813180[85] = 0;
   out_5635087947563813180[86] = 0;
   out_5635087947563813180[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5635087947563813180[88] = 1;
   out_5635087947563813180[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5635087947563813180[90] = 0;
   out_5635087947563813180[91] = 0;
   out_5635087947563813180[92] = 0;
   out_5635087947563813180[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5635087947563813180[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5635087947563813180[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5635087947563813180[96] = 0;
   out_5635087947563813180[97] = 0;
   out_5635087947563813180[98] = 0;
   out_5635087947563813180[99] = 0;
   out_5635087947563813180[100] = 0;
   out_5635087947563813180[101] = 0;
   out_5635087947563813180[102] = 0;
   out_5635087947563813180[103] = 0;
   out_5635087947563813180[104] = 0;
   out_5635087947563813180[105] = 0;
   out_5635087947563813180[106] = 0;
   out_5635087947563813180[107] = 0;
   out_5635087947563813180[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5635087947563813180[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5635087947563813180[110] = 1;
   out_5635087947563813180[111] = 0;
   out_5635087947563813180[112] = 0;
   out_5635087947563813180[113] = 0;
   out_5635087947563813180[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5635087947563813180[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5635087947563813180[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5635087947563813180[117] = 0;
   out_5635087947563813180[118] = 0;
   out_5635087947563813180[119] = 0;
   out_5635087947563813180[120] = 0;
   out_5635087947563813180[121] = 0;
   out_5635087947563813180[122] = 0;
   out_5635087947563813180[123] = 0;
   out_5635087947563813180[124] = 0;
   out_5635087947563813180[125] = 0;
   out_5635087947563813180[126] = 0;
   out_5635087947563813180[127] = 0;
   out_5635087947563813180[128] = 0;
   out_5635087947563813180[129] = 0;
   out_5635087947563813180[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5635087947563813180[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5635087947563813180[132] = 1;
   out_5635087947563813180[133] = 0;
   out_5635087947563813180[134] = 0;
   out_5635087947563813180[135] = 0;
   out_5635087947563813180[136] = 0;
   out_5635087947563813180[137] = 0;
   out_5635087947563813180[138] = 0;
   out_5635087947563813180[139] = 0;
   out_5635087947563813180[140] = 0;
   out_5635087947563813180[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5635087947563813180[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5635087947563813180[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5635087947563813180[144] = 0;
   out_5635087947563813180[145] = 0;
   out_5635087947563813180[146] = 0;
   out_5635087947563813180[147] = 0;
   out_5635087947563813180[148] = 0;
   out_5635087947563813180[149] = 0;
   out_5635087947563813180[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5635087947563813180[151] = 0;
   out_5635087947563813180[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5635087947563813180[153] = 0;
   out_5635087947563813180[154] = 1;
   out_5635087947563813180[155] = 0;
   out_5635087947563813180[156] = 0;
   out_5635087947563813180[157] = 0;
   out_5635087947563813180[158] = 0;
   out_5635087947563813180[159] = 0;
   out_5635087947563813180[160] = 0;
   out_5635087947563813180[161] = 0;
   out_5635087947563813180[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5635087947563813180[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5635087947563813180[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5635087947563813180[165] = 0;
   out_5635087947563813180[166] = 0;
   out_5635087947563813180[167] = 0;
   out_5635087947563813180[168] = 0;
   out_5635087947563813180[169] = 0;
   out_5635087947563813180[170] = 0;
   out_5635087947563813180[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5635087947563813180[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5635087947563813180[173] = 0;
   out_5635087947563813180[174] = 0;
   out_5635087947563813180[175] = 0;
   out_5635087947563813180[176] = 1;
   out_5635087947563813180[177] = 0;
   out_5635087947563813180[178] = 0;
   out_5635087947563813180[179] = 0;
   out_5635087947563813180[180] = 0;
   out_5635087947563813180[181] = 0;
   out_5635087947563813180[182] = 0;
   out_5635087947563813180[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5635087947563813180[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5635087947563813180[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5635087947563813180[186] = 0;
   out_5635087947563813180[187] = 0;
   out_5635087947563813180[188] = 0;
   out_5635087947563813180[189] = 0;
   out_5635087947563813180[190] = 0;
   out_5635087947563813180[191] = 0;
   out_5635087947563813180[192] = 0;
   out_5635087947563813180[193] = 0;
   out_5635087947563813180[194] = 0;
   out_5635087947563813180[195] = 0;
   out_5635087947563813180[196] = 0;
   out_5635087947563813180[197] = 0;
   out_5635087947563813180[198] = 1;
   out_5635087947563813180[199] = 0;
   out_5635087947563813180[200] = 0;
   out_5635087947563813180[201] = 0;
   out_5635087947563813180[202] = 0;
   out_5635087947563813180[203] = 0;
   out_5635087947563813180[204] = 0;
   out_5635087947563813180[205] = 0;
   out_5635087947563813180[206] = 0;
   out_5635087947563813180[207] = 0;
   out_5635087947563813180[208] = 0;
   out_5635087947563813180[209] = 0;
   out_5635087947563813180[210] = 0;
   out_5635087947563813180[211] = 0;
   out_5635087947563813180[212] = 0;
   out_5635087947563813180[213] = 0;
   out_5635087947563813180[214] = 0;
   out_5635087947563813180[215] = 0;
   out_5635087947563813180[216] = 0;
   out_5635087947563813180[217] = 0;
   out_5635087947563813180[218] = 0;
   out_5635087947563813180[219] = 0;
   out_5635087947563813180[220] = 1;
   out_5635087947563813180[221] = 0;
   out_5635087947563813180[222] = 0;
   out_5635087947563813180[223] = 0;
   out_5635087947563813180[224] = 0;
   out_5635087947563813180[225] = 0;
   out_5635087947563813180[226] = 0;
   out_5635087947563813180[227] = 0;
   out_5635087947563813180[228] = 0;
   out_5635087947563813180[229] = 0;
   out_5635087947563813180[230] = 0;
   out_5635087947563813180[231] = 0;
   out_5635087947563813180[232] = 0;
   out_5635087947563813180[233] = 0;
   out_5635087947563813180[234] = 0;
   out_5635087947563813180[235] = 0;
   out_5635087947563813180[236] = 0;
   out_5635087947563813180[237] = 0;
   out_5635087947563813180[238] = 0;
   out_5635087947563813180[239] = 0;
   out_5635087947563813180[240] = 0;
   out_5635087947563813180[241] = 0;
   out_5635087947563813180[242] = 1;
   out_5635087947563813180[243] = 0;
   out_5635087947563813180[244] = 0;
   out_5635087947563813180[245] = 0;
   out_5635087947563813180[246] = 0;
   out_5635087947563813180[247] = 0;
   out_5635087947563813180[248] = 0;
   out_5635087947563813180[249] = 0;
   out_5635087947563813180[250] = 0;
   out_5635087947563813180[251] = 0;
   out_5635087947563813180[252] = 0;
   out_5635087947563813180[253] = 0;
   out_5635087947563813180[254] = 0;
   out_5635087947563813180[255] = 0;
   out_5635087947563813180[256] = 0;
   out_5635087947563813180[257] = 0;
   out_5635087947563813180[258] = 0;
   out_5635087947563813180[259] = 0;
   out_5635087947563813180[260] = 0;
   out_5635087947563813180[261] = 0;
   out_5635087947563813180[262] = 0;
   out_5635087947563813180[263] = 0;
   out_5635087947563813180[264] = 1;
   out_5635087947563813180[265] = 0;
   out_5635087947563813180[266] = 0;
   out_5635087947563813180[267] = 0;
   out_5635087947563813180[268] = 0;
   out_5635087947563813180[269] = 0;
   out_5635087947563813180[270] = 0;
   out_5635087947563813180[271] = 0;
   out_5635087947563813180[272] = 0;
   out_5635087947563813180[273] = 0;
   out_5635087947563813180[274] = 0;
   out_5635087947563813180[275] = 0;
   out_5635087947563813180[276] = 0;
   out_5635087947563813180[277] = 0;
   out_5635087947563813180[278] = 0;
   out_5635087947563813180[279] = 0;
   out_5635087947563813180[280] = 0;
   out_5635087947563813180[281] = 0;
   out_5635087947563813180[282] = 0;
   out_5635087947563813180[283] = 0;
   out_5635087947563813180[284] = 0;
   out_5635087947563813180[285] = 0;
   out_5635087947563813180[286] = 1;
   out_5635087947563813180[287] = 0;
   out_5635087947563813180[288] = 0;
   out_5635087947563813180[289] = 0;
   out_5635087947563813180[290] = 0;
   out_5635087947563813180[291] = 0;
   out_5635087947563813180[292] = 0;
   out_5635087947563813180[293] = 0;
   out_5635087947563813180[294] = 0;
   out_5635087947563813180[295] = 0;
   out_5635087947563813180[296] = 0;
   out_5635087947563813180[297] = 0;
   out_5635087947563813180[298] = 0;
   out_5635087947563813180[299] = 0;
   out_5635087947563813180[300] = 0;
   out_5635087947563813180[301] = 0;
   out_5635087947563813180[302] = 0;
   out_5635087947563813180[303] = 0;
   out_5635087947563813180[304] = 0;
   out_5635087947563813180[305] = 0;
   out_5635087947563813180[306] = 0;
   out_5635087947563813180[307] = 0;
   out_5635087947563813180[308] = 1;
   out_5635087947563813180[309] = 0;
   out_5635087947563813180[310] = 0;
   out_5635087947563813180[311] = 0;
   out_5635087947563813180[312] = 0;
   out_5635087947563813180[313] = 0;
   out_5635087947563813180[314] = 0;
   out_5635087947563813180[315] = 0;
   out_5635087947563813180[316] = 0;
   out_5635087947563813180[317] = 0;
   out_5635087947563813180[318] = 0;
   out_5635087947563813180[319] = 0;
   out_5635087947563813180[320] = 0;
   out_5635087947563813180[321] = 0;
   out_5635087947563813180[322] = 0;
   out_5635087947563813180[323] = 0;
   out_5635087947563813180[324] = 0;
   out_5635087947563813180[325] = 0;
   out_5635087947563813180[326] = 0;
   out_5635087947563813180[327] = 0;
   out_5635087947563813180[328] = 0;
   out_5635087947563813180[329] = 0;
   out_5635087947563813180[330] = 1;
   out_5635087947563813180[331] = 0;
   out_5635087947563813180[332] = 0;
   out_5635087947563813180[333] = 0;
   out_5635087947563813180[334] = 0;
   out_5635087947563813180[335] = 0;
   out_5635087947563813180[336] = 0;
   out_5635087947563813180[337] = 0;
   out_5635087947563813180[338] = 0;
   out_5635087947563813180[339] = 0;
   out_5635087947563813180[340] = 0;
   out_5635087947563813180[341] = 0;
   out_5635087947563813180[342] = 0;
   out_5635087947563813180[343] = 0;
   out_5635087947563813180[344] = 0;
   out_5635087947563813180[345] = 0;
   out_5635087947563813180[346] = 0;
   out_5635087947563813180[347] = 0;
   out_5635087947563813180[348] = 0;
   out_5635087947563813180[349] = 0;
   out_5635087947563813180[350] = 0;
   out_5635087947563813180[351] = 0;
   out_5635087947563813180[352] = 1;
   out_5635087947563813180[353] = 0;
   out_5635087947563813180[354] = 0;
   out_5635087947563813180[355] = 0;
   out_5635087947563813180[356] = 0;
   out_5635087947563813180[357] = 0;
   out_5635087947563813180[358] = 0;
   out_5635087947563813180[359] = 0;
   out_5635087947563813180[360] = 0;
   out_5635087947563813180[361] = 0;
   out_5635087947563813180[362] = 0;
   out_5635087947563813180[363] = 0;
   out_5635087947563813180[364] = 0;
   out_5635087947563813180[365] = 0;
   out_5635087947563813180[366] = 0;
   out_5635087947563813180[367] = 0;
   out_5635087947563813180[368] = 0;
   out_5635087947563813180[369] = 0;
   out_5635087947563813180[370] = 0;
   out_5635087947563813180[371] = 0;
   out_5635087947563813180[372] = 0;
   out_5635087947563813180[373] = 0;
   out_5635087947563813180[374] = 1;
   out_5635087947563813180[375] = 0;
   out_5635087947563813180[376] = 0;
   out_5635087947563813180[377] = 0;
   out_5635087947563813180[378] = 0;
   out_5635087947563813180[379] = 0;
   out_5635087947563813180[380] = 0;
   out_5635087947563813180[381] = 0;
   out_5635087947563813180[382] = 0;
   out_5635087947563813180[383] = 0;
   out_5635087947563813180[384] = 0;
   out_5635087947563813180[385] = 0;
   out_5635087947563813180[386] = 0;
   out_5635087947563813180[387] = 0;
   out_5635087947563813180[388] = 0;
   out_5635087947563813180[389] = 0;
   out_5635087947563813180[390] = 0;
   out_5635087947563813180[391] = 0;
   out_5635087947563813180[392] = 0;
   out_5635087947563813180[393] = 0;
   out_5635087947563813180[394] = 0;
   out_5635087947563813180[395] = 0;
   out_5635087947563813180[396] = 1;
   out_5635087947563813180[397] = 0;
   out_5635087947563813180[398] = 0;
   out_5635087947563813180[399] = 0;
   out_5635087947563813180[400] = 0;
   out_5635087947563813180[401] = 0;
   out_5635087947563813180[402] = 0;
   out_5635087947563813180[403] = 0;
   out_5635087947563813180[404] = 0;
   out_5635087947563813180[405] = 0;
   out_5635087947563813180[406] = 0;
   out_5635087947563813180[407] = 0;
   out_5635087947563813180[408] = 0;
   out_5635087947563813180[409] = 0;
   out_5635087947563813180[410] = 0;
   out_5635087947563813180[411] = 0;
   out_5635087947563813180[412] = 0;
   out_5635087947563813180[413] = 0;
   out_5635087947563813180[414] = 0;
   out_5635087947563813180[415] = 0;
   out_5635087947563813180[416] = 0;
   out_5635087947563813180[417] = 0;
   out_5635087947563813180[418] = 1;
   out_5635087947563813180[419] = 0;
   out_5635087947563813180[420] = 0;
   out_5635087947563813180[421] = 0;
   out_5635087947563813180[422] = 0;
   out_5635087947563813180[423] = 0;
   out_5635087947563813180[424] = 0;
   out_5635087947563813180[425] = 0;
   out_5635087947563813180[426] = 0;
   out_5635087947563813180[427] = 0;
   out_5635087947563813180[428] = 0;
   out_5635087947563813180[429] = 0;
   out_5635087947563813180[430] = 0;
   out_5635087947563813180[431] = 0;
   out_5635087947563813180[432] = 0;
   out_5635087947563813180[433] = 0;
   out_5635087947563813180[434] = 0;
   out_5635087947563813180[435] = 0;
   out_5635087947563813180[436] = 0;
   out_5635087947563813180[437] = 0;
   out_5635087947563813180[438] = 0;
   out_5635087947563813180[439] = 0;
   out_5635087947563813180[440] = 1;
}
void h_4(double *state, double *unused, double *out_5877431186897083912) {
   out_5877431186897083912[0] = state[10] + state[13];
   out_5877431186897083912[1] = state[11] + state[14];
   out_5877431186897083912[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_3803620381983396311) {
   out_3803620381983396311[0] = 0;
   out_3803620381983396311[1] = 0;
   out_3803620381983396311[2] = 0;
   out_3803620381983396311[3] = 0;
   out_3803620381983396311[4] = 0;
   out_3803620381983396311[5] = 0;
   out_3803620381983396311[6] = 0;
   out_3803620381983396311[7] = 0;
   out_3803620381983396311[8] = 0;
   out_3803620381983396311[9] = 0;
   out_3803620381983396311[10] = 1;
   out_3803620381983396311[11] = 0;
   out_3803620381983396311[12] = 0;
   out_3803620381983396311[13] = 1;
   out_3803620381983396311[14] = 0;
   out_3803620381983396311[15] = 0;
   out_3803620381983396311[16] = 0;
   out_3803620381983396311[17] = 0;
   out_3803620381983396311[18] = 0;
   out_3803620381983396311[19] = 0;
   out_3803620381983396311[20] = 0;
   out_3803620381983396311[21] = 0;
   out_3803620381983396311[22] = 0;
   out_3803620381983396311[23] = 0;
   out_3803620381983396311[24] = 0;
   out_3803620381983396311[25] = 0;
   out_3803620381983396311[26] = 0;
   out_3803620381983396311[27] = 0;
   out_3803620381983396311[28] = 0;
   out_3803620381983396311[29] = 0;
   out_3803620381983396311[30] = 0;
   out_3803620381983396311[31] = 0;
   out_3803620381983396311[32] = 0;
   out_3803620381983396311[33] = 1;
   out_3803620381983396311[34] = 0;
   out_3803620381983396311[35] = 0;
   out_3803620381983396311[36] = 1;
   out_3803620381983396311[37] = 0;
   out_3803620381983396311[38] = 0;
   out_3803620381983396311[39] = 0;
   out_3803620381983396311[40] = 0;
   out_3803620381983396311[41] = 0;
   out_3803620381983396311[42] = 0;
   out_3803620381983396311[43] = 0;
   out_3803620381983396311[44] = 0;
   out_3803620381983396311[45] = 0;
   out_3803620381983396311[46] = 0;
   out_3803620381983396311[47] = 0;
   out_3803620381983396311[48] = 0;
   out_3803620381983396311[49] = 0;
   out_3803620381983396311[50] = 0;
   out_3803620381983396311[51] = 0;
   out_3803620381983396311[52] = 0;
   out_3803620381983396311[53] = 0;
   out_3803620381983396311[54] = 0;
   out_3803620381983396311[55] = 0;
   out_3803620381983396311[56] = 1;
   out_3803620381983396311[57] = 0;
   out_3803620381983396311[58] = 0;
   out_3803620381983396311[59] = 1;
   out_3803620381983396311[60] = 0;
   out_3803620381983396311[61] = 0;
   out_3803620381983396311[62] = 0;
   out_3803620381983396311[63] = 0;
   out_3803620381983396311[64] = 0;
   out_3803620381983396311[65] = 0;
}
void h_9(double *state, double *unused, double *out_4086184597025535118) {
   out_4086184597025535118[0] = state[10];
   out_4086184597025535118[1] = state[11];
   out_4086184597025535118[2] = state[12];
}
void H_9(double *state, double *unused, double *out_3562430735353805666) {
   out_3562430735353805666[0] = 0;
   out_3562430735353805666[1] = 0;
   out_3562430735353805666[2] = 0;
   out_3562430735353805666[3] = 0;
   out_3562430735353805666[4] = 0;
   out_3562430735353805666[5] = 0;
   out_3562430735353805666[6] = 0;
   out_3562430735353805666[7] = 0;
   out_3562430735353805666[8] = 0;
   out_3562430735353805666[9] = 0;
   out_3562430735353805666[10] = 1;
   out_3562430735353805666[11] = 0;
   out_3562430735353805666[12] = 0;
   out_3562430735353805666[13] = 0;
   out_3562430735353805666[14] = 0;
   out_3562430735353805666[15] = 0;
   out_3562430735353805666[16] = 0;
   out_3562430735353805666[17] = 0;
   out_3562430735353805666[18] = 0;
   out_3562430735353805666[19] = 0;
   out_3562430735353805666[20] = 0;
   out_3562430735353805666[21] = 0;
   out_3562430735353805666[22] = 0;
   out_3562430735353805666[23] = 0;
   out_3562430735353805666[24] = 0;
   out_3562430735353805666[25] = 0;
   out_3562430735353805666[26] = 0;
   out_3562430735353805666[27] = 0;
   out_3562430735353805666[28] = 0;
   out_3562430735353805666[29] = 0;
   out_3562430735353805666[30] = 0;
   out_3562430735353805666[31] = 0;
   out_3562430735353805666[32] = 0;
   out_3562430735353805666[33] = 1;
   out_3562430735353805666[34] = 0;
   out_3562430735353805666[35] = 0;
   out_3562430735353805666[36] = 0;
   out_3562430735353805666[37] = 0;
   out_3562430735353805666[38] = 0;
   out_3562430735353805666[39] = 0;
   out_3562430735353805666[40] = 0;
   out_3562430735353805666[41] = 0;
   out_3562430735353805666[42] = 0;
   out_3562430735353805666[43] = 0;
   out_3562430735353805666[44] = 0;
   out_3562430735353805666[45] = 0;
   out_3562430735353805666[46] = 0;
   out_3562430735353805666[47] = 0;
   out_3562430735353805666[48] = 0;
   out_3562430735353805666[49] = 0;
   out_3562430735353805666[50] = 0;
   out_3562430735353805666[51] = 0;
   out_3562430735353805666[52] = 0;
   out_3562430735353805666[53] = 0;
   out_3562430735353805666[54] = 0;
   out_3562430735353805666[55] = 0;
   out_3562430735353805666[56] = 1;
   out_3562430735353805666[57] = 0;
   out_3562430735353805666[58] = 0;
   out_3562430735353805666[59] = 0;
   out_3562430735353805666[60] = 0;
   out_3562430735353805666[61] = 0;
   out_3562430735353805666[62] = 0;
   out_3562430735353805666[63] = 0;
   out_3562430735353805666[64] = 0;
   out_3562430735353805666[65] = 0;
}
void h_10(double *state, double *unused, double *out_1506774930050350103) {
   out_1506774930050350103[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_1506774930050350103[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_1506774930050350103[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_282797064244797466) {
   out_282797064244797466[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_282797064244797466[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_282797064244797466[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_282797064244797466[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_282797064244797466[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_282797064244797466[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_282797064244797466[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_282797064244797466[7] = 0;
   out_282797064244797466[8] = 0;
   out_282797064244797466[9] = 0;
   out_282797064244797466[10] = 0;
   out_282797064244797466[11] = 0;
   out_282797064244797466[12] = 0;
   out_282797064244797466[13] = 0;
   out_282797064244797466[14] = 0;
   out_282797064244797466[15] = 0;
   out_282797064244797466[16] = 1;
   out_282797064244797466[17] = 0;
   out_282797064244797466[18] = 0;
   out_282797064244797466[19] = 1;
   out_282797064244797466[20] = 0;
   out_282797064244797466[21] = 0;
   out_282797064244797466[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_282797064244797466[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_282797064244797466[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_282797064244797466[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_282797064244797466[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_282797064244797466[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_282797064244797466[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_282797064244797466[29] = 0;
   out_282797064244797466[30] = 0;
   out_282797064244797466[31] = 0;
   out_282797064244797466[32] = 0;
   out_282797064244797466[33] = 0;
   out_282797064244797466[34] = 0;
   out_282797064244797466[35] = 0;
   out_282797064244797466[36] = 0;
   out_282797064244797466[37] = 0;
   out_282797064244797466[38] = 0;
   out_282797064244797466[39] = 1;
   out_282797064244797466[40] = 0;
   out_282797064244797466[41] = 0;
   out_282797064244797466[42] = 1;
   out_282797064244797466[43] = 0;
   out_282797064244797466[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_282797064244797466[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_282797064244797466[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_282797064244797466[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_282797064244797466[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_282797064244797466[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_282797064244797466[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_282797064244797466[51] = 0;
   out_282797064244797466[52] = 0;
   out_282797064244797466[53] = 0;
   out_282797064244797466[54] = 0;
   out_282797064244797466[55] = 0;
   out_282797064244797466[56] = 0;
   out_282797064244797466[57] = 0;
   out_282797064244797466[58] = 0;
   out_282797064244797466[59] = 0;
   out_282797064244797466[60] = 0;
   out_282797064244797466[61] = 0;
   out_282797064244797466[62] = 1;
   out_282797064244797466[63] = 0;
   out_282797064244797466[64] = 0;
   out_282797064244797466[65] = 1;
}
void h_12(double *state, double *unused, double *out_5403427492213584531) {
   out_5403427492213584531[0] = state[0];
   out_5403427492213584531[1] = state[1];
   out_5403427492213584531[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1215836026048565484) {
   out_1215836026048565484[0] = 1;
   out_1215836026048565484[1] = 0;
   out_1215836026048565484[2] = 0;
   out_1215836026048565484[3] = 0;
   out_1215836026048565484[4] = 0;
   out_1215836026048565484[5] = 0;
   out_1215836026048565484[6] = 0;
   out_1215836026048565484[7] = 0;
   out_1215836026048565484[8] = 0;
   out_1215836026048565484[9] = 0;
   out_1215836026048565484[10] = 0;
   out_1215836026048565484[11] = 0;
   out_1215836026048565484[12] = 0;
   out_1215836026048565484[13] = 0;
   out_1215836026048565484[14] = 0;
   out_1215836026048565484[15] = 0;
   out_1215836026048565484[16] = 0;
   out_1215836026048565484[17] = 0;
   out_1215836026048565484[18] = 0;
   out_1215836026048565484[19] = 0;
   out_1215836026048565484[20] = 0;
   out_1215836026048565484[21] = 0;
   out_1215836026048565484[22] = 0;
   out_1215836026048565484[23] = 1;
   out_1215836026048565484[24] = 0;
   out_1215836026048565484[25] = 0;
   out_1215836026048565484[26] = 0;
   out_1215836026048565484[27] = 0;
   out_1215836026048565484[28] = 0;
   out_1215836026048565484[29] = 0;
   out_1215836026048565484[30] = 0;
   out_1215836026048565484[31] = 0;
   out_1215836026048565484[32] = 0;
   out_1215836026048565484[33] = 0;
   out_1215836026048565484[34] = 0;
   out_1215836026048565484[35] = 0;
   out_1215836026048565484[36] = 0;
   out_1215836026048565484[37] = 0;
   out_1215836026048565484[38] = 0;
   out_1215836026048565484[39] = 0;
   out_1215836026048565484[40] = 0;
   out_1215836026048565484[41] = 0;
   out_1215836026048565484[42] = 0;
   out_1215836026048565484[43] = 0;
   out_1215836026048565484[44] = 0;
   out_1215836026048565484[45] = 0;
   out_1215836026048565484[46] = 1;
   out_1215836026048565484[47] = 0;
   out_1215836026048565484[48] = 0;
   out_1215836026048565484[49] = 0;
   out_1215836026048565484[50] = 0;
   out_1215836026048565484[51] = 0;
   out_1215836026048565484[52] = 0;
   out_1215836026048565484[53] = 0;
   out_1215836026048565484[54] = 0;
   out_1215836026048565484[55] = 0;
   out_1215836026048565484[56] = 0;
   out_1215836026048565484[57] = 0;
   out_1215836026048565484[58] = 0;
   out_1215836026048565484[59] = 0;
   out_1215836026048565484[60] = 0;
   out_1215836026048565484[61] = 0;
   out_1215836026048565484[62] = 0;
   out_1215836026048565484[63] = 0;
   out_1215836026048565484[64] = 0;
   out_1215836026048565484[65] = 0;
}
void h_35(double *state, double *unused, double *out_7911039660552771080) {
   out_7911039660552771080[0] = state[7];
   out_7911039660552771080[1] = state[8];
   out_7911039660552771080[2] = state[9];
}
void H_35(double *state, double *unused, double *out_436958324610788935) {
   out_436958324610788935[0] = 0;
   out_436958324610788935[1] = 0;
   out_436958324610788935[2] = 0;
   out_436958324610788935[3] = 0;
   out_436958324610788935[4] = 0;
   out_436958324610788935[5] = 0;
   out_436958324610788935[6] = 0;
   out_436958324610788935[7] = 1;
   out_436958324610788935[8] = 0;
   out_436958324610788935[9] = 0;
   out_436958324610788935[10] = 0;
   out_436958324610788935[11] = 0;
   out_436958324610788935[12] = 0;
   out_436958324610788935[13] = 0;
   out_436958324610788935[14] = 0;
   out_436958324610788935[15] = 0;
   out_436958324610788935[16] = 0;
   out_436958324610788935[17] = 0;
   out_436958324610788935[18] = 0;
   out_436958324610788935[19] = 0;
   out_436958324610788935[20] = 0;
   out_436958324610788935[21] = 0;
   out_436958324610788935[22] = 0;
   out_436958324610788935[23] = 0;
   out_436958324610788935[24] = 0;
   out_436958324610788935[25] = 0;
   out_436958324610788935[26] = 0;
   out_436958324610788935[27] = 0;
   out_436958324610788935[28] = 0;
   out_436958324610788935[29] = 0;
   out_436958324610788935[30] = 1;
   out_436958324610788935[31] = 0;
   out_436958324610788935[32] = 0;
   out_436958324610788935[33] = 0;
   out_436958324610788935[34] = 0;
   out_436958324610788935[35] = 0;
   out_436958324610788935[36] = 0;
   out_436958324610788935[37] = 0;
   out_436958324610788935[38] = 0;
   out_436958324610788935[39] = 0;
   out_436958324610788935[40] = 0;
   out_436958324610788935[41] = 0;
   out_436958324610788935[42] = 0;
   out_436958324610788935[43] = 0;
   out_436958324610788935[44] = 0;
   out_436958324610788935[45] = 0;
   out_436958324610788935[46] = 0;
   out_436958324610788935[47] = 0;
   out_436958324610788935[48] = 0;
   out_436958324610788935[49] = 0;
   out_436958324610788935[50] = 0;
   out_436958324610788935[51] = 0;
   out_436958324610788935[52] = 0;
   out_436958324610788935[53] = 1;
   out_436958324610788935[54] = 0;
   out_436958324610788935[55] = 0;
   out_436958324610788935[56] = 0;
   out_436958324610788935[57] = 0;
   out_436958324610788935[58] = 0;
   out_436958324610788935[59] = 0;
   out_436958324610788935[60] = 0;
   out_436958324610788935[61] = 0;
   out_436958324610788935[62] = 0;
   out_436958324610788935[63] = 0;
   out_436958324610788935[64] = 0;
   out_436958324610788935[65] = 0;
}
void h_32(double *state, double *unused, double *out_4702994774248972860) {
   out_4702994774248972860[0] = state[3];
   out_4702994774248972860[1] = state[4];
   out_4702994774248972860[2] = state[5];
   out_4702994774248972860[3] = state[6];
}
void H_32(double *state, double *unused, double *out_5364346047596823623) {
   out_5364346047596823623[0] = 0;
   out_5364346047596823623[1] = 0;
   out_5364346047596823623[2] = 0;
   out_5364346047596823623[3] = 1;
   out_5364346047596823623[4] = 0;
   out_5364346047596823623[5] = 0;
   out_5364346047596823623[6] = 0;
   out_5364346047596823623[7] = 0;
   out_5364346047596823623[8] = 0;
   out_5364346047596823623[9] = 0;
   out_5364346047596823623[10] = 0;
   out_5364346047596823623[11] = 0;
   out_5364346047596823623[12] = 0;
   out_5364346047596823623[13] = 0;
   out_5364346047596823623[14] = 0;
   out_5364346047596823623[15] = 0;
   out_5364346047596823623[16] = 0;
   out_5364346047596823623[17] = 0;
   out_5364346047596823623[18] = 0;
   out_5364346047596823623[19] = 0;
   out_5364346047596823623[20] = 0;
   out_5364346047596823623[21] = 0;
   out_5364346047596823623[22] = 0;
   out_5364346047596823623[23] = 0;
   out_5364346047596823623[24] = 0;
   out_5364346047596823623[25] = 0;
   out_5364346047596823623[26] = 1;
   out_5364346047596823623[27] = 0;
   out_5364346047596823623[28] = 0;
   out_5364346047596823623[29] = 0;
   out_5364346047596823623[30] = 0;
   out_5364346047596823623[31] = 0;
   out_5364346047596823623[32] = 0;
   out_5364346047596823623[33] = 0;
   out_5364346047596823623[34] = 0;
   out_5364346047596823623[35] = 0;
   out_5364346047596823623[36] = 0;
   out_5364346047596823623[37] = 0;
   out_5364346047596823623[38] = 0;
   out_5364346047596823623[39] = 0;
   out_5364346047596823623[40] = 0;
   out_5364346047596823623[41] = 0;
   out_5364346047596823623[42] = 0;
   out_5364346047596823623[43] = 0;
   out_5364346047596823623[44] = 0;
   out_5364346047596823623[45] = 0;
   out_5364346047596823623[46] = 0;
   out_5364346047596823623[47] = 0;
   out_5364346047596823623[48] = 0;
   out_5364346047596823623[49] = 1;
   out_5364346047596823623[50] = 0;
   out_5364346047596823623[51] = 0;
   out_5364346047596823623[52] = 0;
   out_5364346047596823623[53] = 0;
   out_5364346047596823623[54] = 0;
   out_5364346047596823623[55] = 0;
   out_5364346047596823623[56] = 0;
   out_5364346047596823623[57] = 0;
   out_5364346047596823623[58] = 0;
   out_5364346047596823623[59] = 0;
   out_5364346047596823623[60] = 0;
   out_5364346047596823623[61] = 0;
   out_5364346047596823623[62] = 0;
   out_5364346047596823623[63] = 0;
   out_5364346047596823623[64] = 0;
   out_5364346047596823623[65] = 0;
   out_5364346047596823623[66] = 0;
   out_5364346047596823623[67] = 0;
   out_5364346047596823623[68] = 0;
   out_5364346047596823623[69] = 0;
   out_5364346047596823623[70] = 0;
   out_5364346047596823623[71] = 0;
   out_5364346047596823623[72] = 1;
   out_5364346047596823623[73] = 0;
   out_5364346047596823623[74] = 0;
   out_5364346047596823623[75] = 0;
   out_5364346047596823623[76] = 0;
   out_5364346047596823623[77] = 0;
   out_5364346047596823623[78] = 0;
   out_5364346047596823623[79] = 0;
   out_5364346047596823623[80] = 0;
   out_5364346047596823623[81] = 0;
   out_5364346047596823623[82] = 0;
   out_5364346047596823623[83] = 0;
   out_5364346047596823623[84] = 0;
   out_5364346047596823623[85] = 0;
   out_5364346047596823623[86] = 0;
   out_5364346047596823623[87] = 0;
}
void h_13(double *state, double *unused, double *out_2974338752368555092) {
   out_2974338752368555092[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_2974338752368555092[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_2974338752368555092[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_1777836100001051822) {
   out_1777836100001051822[0] = 0;
   out_1777836100001051822[1] = 0;
   out_1777836100001051822[2] = 0;
   out_1777836100001051822[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1777836100001051822[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1777836100001051822[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_1777836100001051822[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1777836100001051822[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_1777836100001051822[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_1777836100001051822[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_1777836100001051822[10] = 0;
   out_1777836100001051822[11] = 0;
   out_1777836100001051822[12] = 0;
   out_1777836100001051822[13] = 0;
   out_1777836100001051822[14] = 0;
   out_1777836100001051822[15] = 0;
   out_1777836100001051822[16] = 0;
   out_1777836100001051822[17] = 0;
   out_1777836100001051822[18] = 0;
   out_1777836100001051822[19] = 0;
   out_1777836100001051822[20] = 0;
   out_1777836100001051822[21] = 0;
   out_1777836100001051822[22] = 0;
   out_1777836100001051822[23] = 0;
   out_1777836100001051822[24] = 0;
   out_1777836100001051822[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1777836100001051822[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1777836100001051822[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1777836100001051822[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_1777836100001051822[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_1777836100001051822[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_1777836100001051822[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_1777836100001051822[32] = 0;
   out_1777836100001051822[33] = 0;
   out_1777836100001051822[34] = 0;
   out_1777836100001051822[35] = 0;
   out_1777836100001051822[36] = 0;
   out_1777836100001051822[37] = 0;
   out_1777836100001051822[38] = 0;
   out_1777836100001051822[39] = 0;
   out_1777836100001051822[40] = 0;
   out_1777836100001051822[41] = 0;
   out_1777836100001051822[42] = 0;
   out_1777836100001051822[43] = 0;
   out_1777836100001051822[44] = 0;
   out_1777836100001051822[45] = 0;
   out_1777836100001051822[46] = 0;
   out_1777836100001051822[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1777836100001051822[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_1777836100001051822[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1777836100001051822[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1777836100001051822[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_1777836100001051822[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_1777836100001051822[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_1777836100001051822[54] = 0;
   out_1777836100001051822[55] = 0;
   out_1777836100001051822[56] = 0;
   out_1777836100001051822[57] = 0;
   out_1777836100001051822[58] = 0;
   out_1777836100001051822[59] = 0;
   out_1777836100001051822[60] = 0;
   out_1777836100001051822[61] = 0;
   out_1777836100001051822[62] = 0;
   out_1777836100001051822[63] = 0;
   out_1777836100001051822[64] = 0;
   out_1777836100001051822[65] = 0;
}
void h_14(double *state, double *unused, double *out_4086184597025535118) {
   out_4086184597025535118[0] = state[10];
   out_4086184597025535118[1] = state[11];
   out_4086184597025535118[2] = state[12];
}
void H_14(double *state, double *unused, double *out_3562430735353805666) {
   out_3562430735353805666[0] = 0;
   out_3562430735353805666[1] = 0;
   out_3562430735353805666[2] = 0;
   out_3562430735353805666[3] = 0;
   out_3562430735353805666[4] = 0;
   out_3562430735353805666[5] = 0;
   out_3562430735353805666[6] = 0;
   out_3562430735353805666[7] = 0;
   out_3562430735353805666[8] = 0;
   out_3562430735353805666[9] = 0;
   out_3562430735353805666[10] = 1;
   out_3562430735353805666[11] = 0;
   out_3562430735353805666[12] = 0;
   out_3562430735353805666[13] = 0;
   out_3562430735353805666[14] = 0;
   out_3562430735353805666[15] = 0;
   out_3562430735353805666[16] = 0;
   out_3562430735353805666[17] = 0;
   out_3562430735353805666[18] = 0;
   out_3562430735353805666[19] = 0;
   out_3562430735353805666[20] = 0;
   out_3562430735353805666[21] = 0;
   out_3562430735353805666[22] = 0;
   out_3562430735353805666[23] = 0;
   out_3562430735353805666[24] = 0;
   out_3562430735353805666[25] = 0;
   out_3562430735353805666[26] = 0;
   out_3562430735353805666[27] = 0;
   out_3562430735353805666[28] = 0;
   out_3562430735353805666[29] = 0;
   out_3562430735353805666[30] = 0;
   out_3562430735353805666[31] = 0;
   out_3562430735353805666[32] = 0;
   out_3562430735353805666[33] = 1;
   out_3562430735353805666[34] = 0;
   out_3562430735353805666[35] = 0;
   out_3562430735353805666[36] = 0;
   out_3562430735353805666[37] = 0;
   out_3562430735353805666[38] = 0;
   out_3562430735353805666[39] = 0;
   out_3562430735353805666[40] = 0;
   out_3562430735353805666[41] = 0;
   out_3562430735353805666[42] = 0;
   out_3562430735353805666[43] = 0;
   out_3562430735353805666[44] = 0;
   out_3562430735353805666[45] = 0;
   out_3562430735353805666[46] = 0;
   out_3562430735353805666[47] = 0;
   out_3562430735353805666[48] = 0;
   out_3562430735353805666[49] = 0;
   out_3562430735353805666[50] = 0;
   out_3562430735353805666[51] = 0;
   out_3562430735353805666[52] = 0;
   out_3562430735353805666[53] = 0;
   out_3562430735353805666[54] = 0;
   out_3562430735353805666[55] = 0;
   out_3562430735353805666[56] = 1;
   out_3562430735353805666[57] = 0;
   out_3562430735353805666[58] = 0;
   out_3562430735353805666[59] = 0;
   out_3562430735353805666[60] = 0;
   out_3562430735353805666[61] = 0;
   out_3562430735353805666[62] = 0;
   out_3562430735353805666[63] = 0;
   out_3562430735353805666[64] = 0;
   out_3562430735353805666[65] = 0;
}
void h_33(double *state, double *unused, double *out_5902435596341600660) {
   out_5902435596341600660[0] = state[16];
   out_5902435596341600660[1] = state[17];
   out_5902435596341600660[2] = state[18];
}
void H_33(double *state, double *unused, double *out_2713598680028068669) {
   out_2713598680028068669[0] = 0;
   out_2713598680028068669[1] = 0;
   out_2713598680028068669[2] = 0;
   out_2713598680028068669[3] = 0;
   out_2713598680028068669[4] = 0;
   out_2713598680028068669[5] = 0;
   out_2713598680028068669[6] = 0;
   out_2713598680028068669[7] = 0;
   out_2713598680028068669[8] = 0;
   out_2713598680028068669[9] = 0;
   out_2713598680028068669[10] = 0;
   out_2713598680028068669[11] = 0;
   out_2713598680028068669[12] = 0;
   out_2713598680028068669[13] = 0;
   out_2713598680028068669[14] = 0;
   out_2713598680028068669[15] = 0;
   out_2713598680028068669[16] = 1;
   out_2713598680028068669[17] = 0;
   out_2713598680028068669[18] = 0;
   out_2713598680028068669[19] = 0;
   out_2713598680028068669[20] = 0;
   out_2713598680028068669[21] = 0;
   out_2713598680028068669[22] = 0;
   out_2713598680028068669[23] = 0;
   out_2713598680028068669[24] = 0;
   out_2713598680028068669[25] = 0;
   out_2713598680028068669[26] = 0;
   out_2713598680028068669[27] = 0;
   out_2713598680028068669[28] = 0;
   out_2713598680028068669[29] = 0;
   out_2713598680028068669[30] = 0;
   out_2713598680028068669[31] = 0;
   out_2713598680028068669[32] = 0;
   out_2713598680028068669[33] = 0;
   out_2713598680028068669[34] = 0;
   out_2713598680028068669[35] = 0;
   out_2713598680028068669[36] = 0;
   out_2713598680028068669[37] = 0;
   out_2713598680028068669[38] = 0;
   out_2713598680028068669[39] = 1;
   out_2713598680028068669[40] = 0;
   out_2713598680028068669[41] = 0;
   out_2713598680028068669[42] = 0;
   out_2713598680028068669[43] = 0;
   out_2713598680028068669[44] = 0;
   out_2713598680028068669[45] = 0;
   out_2713598680028068669[46] = 0;
   out_2713598680028068669[47] = 0;
   out_2713598680028068669[48] = 0;
   out_2713598680028068669[49] = 0;
   out_2713598680028068669[50] = 0;
   out_2713598680028068669[51] = 0;
   out_2713598680028068669[52] = 0;
   out_2713598680028068669[53] = 0;
   out_2713598680028068669[54] = 0;
   out_2713598680028068669[55] = 0;
   out_2713598680028068669[56] = 0;
   out_2713598680028068669[57] = 0;
   out_2713598680028068669[58] = 0;
   out_2713598680028068669[59] = 0;
   out_2713598680028068669[60] = 0;
   out_2713598680028068669[61] = 0;
   out_2713598680028068669[62] = 1;
   out_2713598680028068669[63] = 0;
   out_2713598680028068669[64] = 0;
   out_2713598680028068669[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7930137500395005439) {
  H(in_vec, out_7930137500395005439);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_1511445506936860753) {
  err_fun(nom_x, delta_x, out_1511445506936860753);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4492291371470343697) {
  inv_err_fun(nom_x, true_x, out_4492291371470343697);
}
void live_H_mod_fun(double *state, double *out_6277349731035049140) {
  H_mod_fun(state, out_6277349731035049140);
}
void live_f_fun(double *state, double dt, double *out_2633777933531838554) {
  f_fun(state,  dt, out_2633777933531838554);
}
void live_F_fun(double *state, double dt, double *out_5635087947563813180) {
  F_fun(state,  dt, out_5635087947563813180);
}
void live_h_4(double *state, double *unused, double *out_5877431186897083912) {
  h_4(state, unused, out_5877431186897083912);
}
void live_H_4(double *state, double *unused, double *out_3803620381983396311) {
  H_4(state, unused, out_3803620381983396311);
}
void live_h_9(double *state, double *unused, double *out_4086184597025535118) {
  h_9(state, unused, out_4086184597025535118);
}
void live_H_9(double *state, double *unused, double *out_3562430735353805666) {
  H_9(state, unused, out_3562430735353805666);
}
void live_h_10(double *state, double *unused, double *out_1506774930050350103) {
  h_10(state, unused, out_1506774930050350103);
}
void live_H_10(double *state, double *unused, double *out_282797064244797466) {
  H_10(state, unused, out_282797064244797466);
}
void live_h_12(double *state, double *unused, double *out_5403427492213584531) {
  h_12(state, unused, out_5403427492213584531);
}
void live_H_12(double *state, double *unused, double *out_1215836026048565484) {
  H_12(state, unused, out_1215836026048565484);
}
void live_h_35(double *state, double *unused, double *out_7911039660552771080) {
  h_35(state, unused, out_7911039660552771080);
}
void live_H_35(double *state, double *unused, double *out_436958324610788935) {
  H_35(state, unused, out_436958324610788935);
}
void live_h_32(double *state, double *unused, double *out_4702994774248972860) {
  h_32(state, unused, out_4702994774248972860);
}
void live_H_32(double *state, double *unused, double *out_5364346047596823623) {
  H_32(state, unused, out_5364346047596823623);
}
void live_h_13(double *state, double *unused, double *out_2974338752368555092) {
  h_13(state, unused, out_2974338752368555092);
}
void live_H_13(double *state, double *unused, double *out_1777836100001051822) {
  H_13(state, unused, out_1777836100001051822);
}
void live_h_14(double *state, double *unused, double *out_4086184597025535118) {
  h_14(state, unused, out_4086184597025535118);
}
void live_H_14(double *state, double *unused, double *out_3562430735353805666) {
  H_14(state, unused, out_3562430735353805666);
}
void live_h_33(double *state, double *unused, double *out_5902435596341600660) {
  h_33(state, unused, out_5902435596341600660);
}
void live_H_33(double *state, double *unused, double *out_2713598680028068669) {
  H_33(state, unused, out_2713598680028068669);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
